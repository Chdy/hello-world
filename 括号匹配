/*
 --------------------------------------------------
 编写内容：括号匹配
 功能：
 创建
 入栈
 出栈
 括号匹配
 时间：2016.04.08
 --------------------------------------------------
 */
# include <stdio.h>
# include <stdlib.h>

# define size 100
# define extend 10

typedef struct steak
{
    char * pTop;
    char * pBottom;
    int steaksize;
}Steak,*pSteak;

void init_steak(pSteak);
void push_steak(pSteak,char);
int pop_steak(pSteak,char *);
int empty_steak(pSteak);

int main(void)
{
    char ch[80];
    char val;
    char * p;
    Steak S;
    init_steak(&S);
    printf("请输入带有((),[],{})的表达式：\n");
    gets(ch);
    p = ch;
    while(*p)
    {
        switch(*p)
        {
            case '(':
            case '[':
            case '{': push_steak(&S,*p++);
                break;
            case ')':
            case ']':
            case '}':
            if( !empty_steak(&S) )
            {
                pop_steak(&S,&val);
                if( !((val=='('&&*p==')') || (val=='['&&*p==']') || (val=='{'&&*p=='}')) )
                {
                    printf("左右括号不匹配!\n");
                    exit(-1);
                   }
            }
            else
                {
                    printf("缺少左括号!\n");
                    exit(-1);
                }
            default:p++;
        }
    }
    if( empty_steak(&S) )
        printf("括号匹配！\n");
    else
        printf("缺少右括号！\n");
    return 0;
}

int empty_steak(pSteak S)
{
    if(S->pTop == S->pBottom)
        return 1;
    else
        return 0;
}

int pop_steak(pSteak S,char *val)
{
    /*if( empty_steak(S) )
    {
        printf("栈为空！\n");
        exit(-1);
    }*/
    *val = *--(S->pTop);
    return 0;
}

void push_steak(pSteak S,char val)
{
    if(S->pTop-S->pBottom == S->steaksize)
    {
        S->pBottom = (char *)realloc(S->pBottom,(S->steaksize + extend)*sizeof(char));
        S->steaksize += extend;
    }
    *(S->pTop)++ = val;
}

void init_steak(pSteak S)
{
    S->pBottom = (char *)malloc(sizeof(char)*size);
    S->pTop = S->pBottom;
    S->steaksize = size;
}
